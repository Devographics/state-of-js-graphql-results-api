#import "./experience.graphql"
#import "./usage.graphql"

"""
Work Experience
"""

type WorkExperienceMatrixRange @cacheControl(maxAge: 600) {
    range: WorkExperienceRange
    count: Int
    percentage: Float
}

type WorkExperienceMatrixBucket @cacheControl(maxAge: 600) {
    id: String
    entity: Entity
    total: Int
    average: Float
    ranges: [WorkExperienceMatrixRange] @cacheControl(maxAge: 600)
}

type YearWorkExperienceMatrix @cacheControl(maxAge: 600) {
    year: Int
    buckets: [WorkExperienceMatrixBucket] @cacheControl(maxAge: 600)
}

type ToolsWorkExperienceMatrix @cacheControl(maxAge: 600) {
    year(year: Int!): YearWorkExperienceMatrix
    experience: ExperienceID
}

"""
Salary
"""

type SalaryMatrixRange @cacheControl(maxAge: 600) {
    range: SalaryRange
    count: Int
    percentage: Float
}

type SalaryMatrixBucket @cacheControl(maxAge: 600) {
    id: String
    entity: Entity
    total: Int
    average: Float
    ranges: [SalaryMatrixRange] @cacheControl(maxAge: 600)
}

type YearSalaryMatrix @cacheControl(maxAge: 600) {
    year: Int
    buckets: [SalaryMatrixBucket] @cacheControl(maxAge: 600)
}

type ToolsSalaryMatrix @cacheControl(maxAge: 600) {
    year(year: Int!): YearSalaryMatrix
    experience: ExperienceID
}

"""
Company Size
"""

type CompanySizeMatrixRange @cacheControl(maxAge: 600) {
    range: CompanySizeRange
    count: Int
    percentage: Float
}

type CompanySizeMatrixBucket @cacheControl(maxAge: 600) {
    id: String
    entity: Entity
    total: Int
    average: Float
    ranges: [CompanySizeMatrixRange] @cacheControl(maxAge: 600)
}

type YearCompanySizeMatrix @cacheControl(maxAge: 600) {
    year: Int
    buckets: [CompanySizeMatrixBucket] @cacheControl(maxAge: 600)
}

type ToolsCompanySizeMatrix @cacheControl(maxAge: 600) {
    year(year: Int!): YearCompanySizeMatrix
    experience: ExperienceID
}

"""
Sub-aggregations for tools for a given experience response,
for example, salary breakdown for users who have used React
and would use it again.
"""
type ToolsMatrices @cacheControl(maxAge: 600) {
    workExperience(experience: ExperienceID!): ToolsWorkExperienceMatrix
    salary(experience: ExperienceID!): ToolsSalaryMatrix
    companySize(experience: ExperienceID!): ToolsCompanySizeMatrix
}

#"""
#Sub-aggregations for features for a given usage response,
#for example, salary breakdown for users who have used flex-box.
#"""
#type FeaturesMatrix @cacheControl(maxAge: 600) {
#    year(year: Int!): YearMatrix
#    experience: UsageID
#}
#
#type FeaturesMatrices @cacheControl(maxAge: 600) {
#    workExperience(usage: UsageID!): FeaturesMatrix
#    salary(usage: UsageID!): FeaturesMatrix
#    companySize(usage: UsageID!): FeaturesMatrix
#}

type Matrices @cacheControl(maxAge: 600) {
    tools(ids: [ToolID]): ToolsMatrices
    # features(ids: [FeatureID]): FeaturesMatrices
}