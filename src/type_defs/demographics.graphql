"""
Participation
"""
type YearParticipation @cacheControl(maxAge: 600) {
    year: Int
    participants: Int
}

type Participation @cacheControl(maxAge: 600) {
    allYears: [YearParticipation]
    year(year: Int!): YearParticipation
}

"""
Country
"""
type CountryBucket @cacheControl(maxAge: 600) {
    id: String
    count: Int
    percentage: Float
}

type YearCountry @cacheControl(maxAge: 600) {
    year: Int
    total: Int
    completion: Completion
    buckets: [CountryBucket] @cacheControl(maxAge: 600)
}

type Country @cacheControl(maxAge: 600) {
    allYears: [YearCountry]
    year(year: Int!): YearCountry
}

"""
Source
"""
type SourceBucket @cacheControl(maxAge: 600) {
    id: String
    count: Int
    percentage: Float
    entity: Entity
}

type YearSource @cacheControl(maxAge: 600) {
    year: Int
    total: Int
    completion: Completion
    buckets: [SourceBucket] @cacheControl(maxAge: 600)
}

type Source @cacheControl(maxAge: 600) {
    allYears: [YearSource]
    year(year: Int!): YearSource
}

"""
Gender
"""
enum GenderID {
    male
    female
    prefer_not_to_say
    non_binary
}

type GenderBucket @cacheControl(maxAge: 600) {
    id: GenderID
    count: Int
    percentage: Float
}

type YearGender @cacheControl(maxAge: 600) {
    year: Int
    """
    Total number of respondents who have answered this specific question.
    """
    total: Int
    completion: Completion
    buckets: [GenderBucket] @cacheControl(maxAge: 600)
}

type Gender @cacheControl(maxAge: 600) {
    allYears: [YearGender]
    year(year: Int!): YearGender
}

"""
Salary
"""
enum SalaryRange {
    range_work_for_free
    range_0_10
    range_10_30
    range_30_50
    range_50_100
    range_100_200
    range_more_than_200
}

type SalaryBucket @cacheControl(maxAge: 600) {
    id: SalaryRange
    count: Int
    percentage: Float
}

type YearSalary @cacheControl(maxAge: 600) {
    year: Int
    """
    Total number of respondents who have answered this specific question.
    """
    total: Int
    completion: Completion
    buckets: [SalaryBucket] @cacheControl(maxAge: 600)
}

type Salary @cacheControl(maxAge: 600) {
    allYears: [YearSalary]
    year(year: Int!): YearSalary
}

"""
Company Size
"""
enum CompanySizeRange {
    range_1
    range_1_5
    range_5_10
    range_10_20
    range_20_50
    range_50_100
    range_100_1000
    range_more_than_1000
}

type CompanySizeBucket @cacheControl(maxAge: 600) {
    id: CompanySizeRange
    count: Int
    percentage: Float
}

type YearCompanySize @cacheControl(maxAge: 600) {
    year: Int
    """
    Total number of respondents who have answered this specific question.
    """
    total: Int
    completion: Completion
    buckets: [CompanySizeBucket] @cacheControl(maxAge: 600)
}

type CompanySize @cacheControl(maxAge: 600) {
    allYears: [YearCompanySize]
    year(year: Int!): YearCompanySize
}

"""
Experience
"""
enum WorkExperienceRange {
    range_less_than_1
    range_1_2
    range_2_5
    range_5_10
    range_10_20
    range_more_than_20
}

type WorkExperienceBucket @cacheControl(maxAge: 600) {
    id: WorkExperienceRange
    count: Int
    percentage: Float
}

type YearWorkExperience @cacheControl(maxAge: 600) {
    year: Int
    """
    Total number of respondents who have answered this specific question.
    """
    total: Int
    completion: Completion
    buckets: [WorkExperienceBucket] @cacheControl(maxAge: 600)
}

type WorkExperience @cacheControl(maxAge: 600) {
    allYears: [YearWorkExperience]
    year(year: Int!): YearWorkExperience
}

"""
Job Title
"""
enum JobTitleID {
    full_stack_developer
    front_end_developer
    web_developer
    back_end_developer
}

type JobTitleBucket @cacheControl(maxAge: 600) {
    id: JobTitleID
    count: Int
    percentage: Float
}

type YearJobTitle @cacheControl(maxAge: 600) {
    year: Int
    total: Int
    completion: Completion
    buckets: [JobTitleBucket] @cacheControl(maxAge: 600)
}

type JobTitle @cacheControl(maxAge: 600) {
    allYears: [YearJobTitle]
    year(year: Int!): YearJobTitle
}

"""
Proficiency Level
"""
type ProficiencyBucket @cacheControl(maxAge: 600) {
    id: Int
    count: Int
    percentage: Float
}

type YearProficiency @cacheControl(maxAge: 600) {
    year: String
    total: Int
    completion: Completion
    buckets: [ProficiencyBucket] @cacheControl(maxAge: 600)
}

type CSSProficiency @cacheControl(maxAge: 600) {
    allYears: [YearProficiency]
    year(year: Int!): YearProficiency
}

type BackendProficiency @cacheControl(maxAge: 600) {
    allYears: [YearProficiency]
    year(year: Int!): YearProficiency
}

"""
Information about particpants:
- overall participation
- gender
- salary
- company size
- â€¦
"""
type Demographics @cacheControl(maxAge: 600) {
    country(filters: Filters): Country @cacheControl(maxAge: 600)
    source(filters: Filters): Source @cacheControl(maxAge: 600)
    participation(filters: Filters): Participation @cacheControl(maxAge: 600)
    gender(filters: Filters): Gender @cacheControl(maxAge: 600)
    salary(filters: Filters): Salary @cacheControl(maxAge: 600)
    companySize(filters: Filters): CompanySize @cacheControl(maxAge: 600)
    workExperience(filters: Filters): WorkExperience @cacheControl(maxAge: 600)
    jobTitle(filters: Filters): JobTitle @cacheControl(maxAge: 600)
    cssProficiency(filters: Filters): CSSProficiency @cacheControl(maxAge: 600)
    backendProficiency(filters: Filters): BackendProficiency @cacheControl(maxAge: 600)
}
