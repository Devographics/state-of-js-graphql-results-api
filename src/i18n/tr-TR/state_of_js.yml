locale: ADD LOCALE HERE
namespace: js
translations:
    ###########################################################################
    # General
    ###########################################################################

    - key: general.survey_intro_js2019 # TODO
      t: >
          The JavaScript world could use a bit of classification.


          Since 2016, this survey has collected 
          data from over 20,000 developers each year to identify current and upcoming trends.


          Take the survey and help us find out which libraries developers 
          want to learn next, which have the best satisfaction ratings, and much more.

    ###########################################################################
    # Sections
    ###########################################################################

    - key: sections.syntax.title # TODO
      t: Syntax
    - key: sections.syntax.description # TODO
      t: The grammar of JavaScript.

    - key: sections.language.title # TODO
      t: Language
    - key: sections.language.description # TODO
      t: The vocabulary of JavaScript.

    - key: sections.data_structures.title # TODO
      t: Data Structures
    - key: sections.data_structures.description # TODO
      t: How you store and manipulate data.

    - key: sections.browser_apis.title # TODO
      t: Browser APIs
    - key: sections.browser_apis.description # TODO
      t: The features provided by the browser.

    - key: sections.other_features.title # TODO
      t: Other Features
    - key: sections.other_features.description # TODO
      t: Other technologies and patterns

    - key: sections.patterns.title # TODO
      t: Patterns
    - key: sections.patterns.description # TODO
      t: How you prefer writing code

    - key: sections.javascript_flavors.title # TODO
      t: JavaScript Flavors
    - key: sections.javascript_flavors.description # TODO
      t: Languages that compile to JavaScript

    - key: sections.front_end_frameworks.title # TODO
      t: Front-end Frameworks
    - key: sections.front_end_frameworks.description # TODO
      t: Front-end frameworks and libraries

    - key: sections.datalayer.title # TODO
      t: Data Layer
    - key: sections.datalayer.description # TODO
      t: Loading and managing data in your app

    - key: sections.back_end_frameworks.title # TODO
      t: Back-end Frameworks
    - key: sections.back_end_frameworks.description # TODO
      t: JavaScript on the server

    - key: sections.testing.title # TODO
      t: Testing
    - key: sections.testing.description # TODO
      t: Tools for testing your code

    - key: sections.mobile_desktop.title # TODO
      t: Mobile & Desktop
    - key: sections.mobile_desktop.description # TODO
      t: JavaScript for mobile devices and desktop apps

    ###########################################################################
    # Options
    ###########################################################################

    # CSS for print
    - key: options.css_for_print.0 # TODO
      t: I (almost) never write print styles
    - key: options.css_for_print.1 # TODO
      t: I occasionally write print styles
    - key: options.css_for_print.2 # TODO
      t: I write print styles as part of most projects
    - key: options.css_for_print.3 # TODO
      t: I focus mainly on CSS for print

    # CSS for email
    - key: options.css_for_email.0 # TODO
      t: I (almost) never write CSS for email clients
    - key: options.css_for_email.1 # TODO
      t: I occasionally write CSS for email clients
    - key: options.css_for_email.2 # TODO
      t: I write CSS for email clients as part of most projects
    - key: options.css_for_email.3 # TODO
      t: I focus mainly on CSS for email clients

    ###########################################################################
    # Features
    ###########################################################################

    # syntax
    - key: features.destructuring # TODO
      t: Destructuring
    - key: features.destructuring.description # TODO
      t: 'Example: <code>const { foo } = bar</code>'
    - key: features.spread_operator # TODO
      t: Spread operator
    - key: features.spread_operator.description # TODO
      t: 'Example: <code>[...array1, ...array2]</code>'
    - key: features.arrow_functions # TODO
      t: Arrow Functions
    - key: features.arrow_functions.description # TODO
      t: 'Example: <code>const foo = () => {}</code>'

    # language
    - key: features.proxies # TODO
      t: Proxies
    - key: features.async_await # TODO
      t: Async/Await
    - key: features.promises # TODO
      t: Promises
    - key: features.decorators # TODO
      t: Decorators
    - key: features.decorators.description # TODO
      t: >
          In its simplest form, a decorator is simply a way of 
          wrapping one piece of code with another — literally “decorating” it.

    # data structures
    - key: features.maps # TODO
      t: Maps
    - key: features.sets # TODO
      t: Sets
    - key: features.typed_arrays # TODO
      t: Typed Arrays
    - key: array_prototype_flat # TODO
      t: Array.prototype.flat

    # browser apis
    - key: features.service_workers # TODO
      t: Service Workers
    - key: features.local_storage # TODO
      t: LocalStorage
    - key: features.i18n # TODO
      t: i18n
    - key: features.web_components # TODO
      t: Web Components
    - key: features.web_audio # TODO
      t: Web Audio API
    - key: features.webgl # TODO
      t: WebGL
    - key: features.web_animations # TODO
      t: Web Animations API
    - key: features.webrtc # TODO
      t: WebRTC
    - key: features.web_speech # TODO
      t: Web Speech API
    - key: features.webvr # TODO
      t: WebVR
    - key: features.websocket # TODO
      t: Websocket
    - key: features.fetch # TODO
      t: Fetch API

    # other features
    - key: features.pwa # TODO
      t: Progressive Web Apps (PWA)
    - key: features.wasm # TODO
      t: WebAssembly (WASM)

    # patterns
    - key: patterns.object_oriented_programming # TODO
      t: Object-Oriented Programming
    - key: features.functional_programming # TODO
      t: Functional Programming
    - key: features.reactive_programming # TODO
      t: Reactive Programming

    ###########################################################################
    # Opinions
    ###########################################################################

    - key: opinions.js_moving_in_right_direction # TODO
      t: JavaScript is moving in the right direction

    - key: opinions.building_js_apps_overly_complex # TODO
      t: Building JavaScript apps is overly complex right now

    - key: opinions.js_over_used_online # TODO
      t: JavaScript is over-used online

    - key: opinions.enjoy_building_js_apps # TODO
      t: I enjoy building JavaScript apps

    - key: opinions.would_like_js_to_be_main_lang # TODO
      t: I would like JavaScript to be my main programming language

    - key: opinions.js_ecosystem_changing_to_fast # TODO
      t: The JavaScript ecosystem is changing too fast

    - key: opinions.missing_from_js # TODO
      t: What do you feel is currently missing from JavaScript?
    - key: opinions.missing_from_js.description # TODO
      t: Features you'd like to see in JavaScript one day.
