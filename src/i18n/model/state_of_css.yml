locale: ADD LOCALE HERE
namespace: css
translations:
    ###########################################################################
    # General
    ###########################################################################

    - key: general.survey_intro_css2020 # TODO
      t: >
          CSS is evolving faster than ever.


          Flexbox, Grid, Multi-Column… To say nothing of whole new paradigms like CSS-in-JS.


          So after the success of our annual State Of JavaScript survey, 
          we’ve decided to take on the world of styles and selectors. We're hoping you’ll help 
          us identify the latest trends, and figure out what tools to learn and use next!

    ###########################################################################
    # Sections
    ###########################################################################

    - key: sections.layout.title # TODO
      t: Layout
    - key: sections.layout.description # TODO
      t: How do you position elements on the screen?

    - key: sections.shapes_graphics.title # TODO
      t: Shapes & Graphics
    - key: sections.shapes_graphics.description # TODO
      t: Controlling the shape and display of elements.

    - key: sections.interactions.title # TODO
      t: Interactions
    - key: sections.interactions.description # TODO
      t: Controlling how the user interacts with the page.

    - key: sections.typography.title # TODO
      t: Typography
    - key: sections.typography.description # TODO
      t: Setting and laying out text.

    - key: sections.animations_transforms.title # TODO
      t: Animations & Transforms
    - key: sections.animations_transforms.description # TODO
      t: Animating and transforming elements.

    - key: sections.media_queries.title # TODO
      t: Media Queries
    - key: sections.media_queries.description # TODO
      t: Ways of adapting your site to the user's device or preferences.

    - key: sections.other_features.title # TODO
      t: Other Features
    - key: sections.other_features.description # TODO
      t: Other CSS features.

    - key: sections.units_selectors.title # TODO
      t: Units & Selectors
    - key: sections.units_selectors.description # TODO
      t: Test your knowledge of CSS units and selectors.

    - key: sections.pre_post_processors.title # TODO
      t: Pre-/Post-processors
    - key: sections.pre_post_processors.description # TODO
      t: Utilities that augment CSS.

    - key: sections.css_frameworks.title # TODO
      t: CSS Frameworks
    - key: sections.css_frameworks.description # TODO
      t: Libraries that give you pre-made components and styles.

    - key: sections.css_methodologies.title # TODO
      t: CSS Methodologies
    - key: sections.css_methodologies.description # TODO
      t: Codified ways to write cleaner CSS.

    - key: sections.css_in_js.title # TODO
      t: CSS-in-JS
    - key: sections.css_in_js.description # TODO
      t: Libraries that help integrate CSS into JavaScript code.

    - key: sections.environments.title # TODO
      t: Environments
    - key: sections.environments.description # TODO
      t: Which environments do you write CSS for?

    ###########################################################################
    # Options
    ###########################################################################

    # CSS for print
    - key: options.css_for_print.0 # TODO
      t: I (almost) never write print styles
    - key: options.css_for_print.1 # TODO
      t: I occasionally write print styles
    - key: options.css_for_print.2 # TODO
      t: I write print styles as part of most projects
    - key: options.css_for_print.3 # TODO
      t: I focus mainly on CSS for print

    # CSS for email
    - key: options.css_for_email.0 # TODO
      t: I (almost) never write CSS for email clients
    - key: options.css_for_email.1 # TODO
      t: I occasionally write CSS for email clients
    - key: options.css_for_email.2 # TODO
      t: I write CSS for email clients as part of most projects
    - key: options.css_for_email.3 # TODO
      t: I focus mainly on CSS for email clients

    ###########################################################################
    # Features
    ###########################################################################

    # layout

    - key: features.grid # TODO
      t: CSS Grid
    - key: features.subgrid # TODO
      t: Subgrid
    - key: features.regions # TODO
      t: CSS Regions
    - key: features.flexbox # TODO
      t: Flexbox
    - key: features.multi_column # TODO
      t: CSS Multi-Column
    - key: features.writing_modes # TODO
      t: CSS Writing Modes
    - key: features.exclusions # TODO
      t: CSS Exclusions
    - key: features.position_sticky
      t: '<code>position: sticky</code>'
    - key: features.logical_properties # TODO
      t: Logical Properties
    - key: features.logical_properties.description # TODO
      t: <code>margin-block-start</code>, <code>padding-inline-end</code>, etc.
    - key: features.aspect_ratio
      t: <code>aspect-ratio</code>
    - key: features.content_visibility
      t: <code>content-visibility</code>

    # shapes & graphics
    - key: features.shapes # TODO
      t: CSS Shapes
    - key: features.object_fit
      t: <code>object-fit</code>
    - key: features.clip_path
      t: <code>clip-path</code>
    - key: features.masks # TODO
      t: CSS Masks
    - key: features.blend_modes # TODO
      t: Blend Modes
    - key: features.blend_modes.description # TODO
      t: The <code>mix-blend-mode</code> property
    - key: features.filter_effects # TODO
      t: CSS Filter Effects
    - key: features.backdrop_filter
      t: <code>backdrop-filter</code>

    # interactions
    - key: features.scroll_snap # TODO
      t: CSS Scroll Snap
    - key: features.overscroll_behavior
      t: <code>overscroll-behavior</code>
    - key: features.overflow_anchor
      t: <code>overflow-anchor</code>
    - key: features.touch_action
      t: <code>touch-action</code>
    - key: features.pointer_events
      t: <code>pointer-events</code>

    # typography
    - key: features.web_fonts # TODO
      t: Web fonts (@font-face)
    - key: features.variables_fonts # TODO
      t: Variable fonts
    - key: features.line_breaking # TODO
      t: Line breaking properties
    - key: features.line_breaking.description # TODO
      t: <code>overflow-wrap</code>, <code>word-break</code>, <code>line-break</code>, <code>hyphens</code>
    - key: features.font_variant
      t: <code>font-variant-*</code>
    - key: features.initial_letter
      t: <code>initial-letter</code>
    - key: features.font_variant_numeric
      t: <code>font-variant-numeric</code>
    - key: features.font_display
      t: <code>font-display</code>
    - key: features.line_clamp
      t: <code>line-clamp</code>
    - key: features.leading_trim
      t: <code>leading-trim</code>
    - key: features.direction
      t: <code>direction</code>
    - key: features.direction.description # TODO
      t: Also includes <code>dir</code> HTML attribute.

    # animations & transforms
    - key: features.transitions # TODO
      t: CSS Transitions
    - key: features.transforms # TODO
      t: CSS Transforms
    - key: features.animations # TODO
      t: CSS Animations
    - key: features.perspective
      t: <code>perspective</code>

    # media queries
    - key: features.feature_support_queries # TODO
      t: Feature Support Queries (<code>@supports</code>)
    - key: features.prefers_reduced_motion
      t: <code>prefers-reduced-motion</code>
    - key: features.prefers_color_scheme
      t: <code>prefers-color-scheme</code>
    - key: features.color_gamut
      t: <code>color-gamut</code>

    # other features
    - key: features.variables # TODO
      t: CSS Variables (Custom Properties)
    - key: features.containment # TODO
      t: CSS Containment
    - key: features.will_change
      t: <code>will-change</code>
    - key: features.calc
      t: <code>calc()</code>
    - key: features.houdini # TODO
      t: Houdini
    - key: features.comparison_functions # TODO
      t: CSS Comparison Functions
    - key: features.comparison_functions.description # TODO
      t: <code>min()</code>, <code>max()</code>, and <code>clamp()</code>

    ###########################################################################
    # Units & Selectors
    ###########################################################################

    - key: features_others.units # TODO
      t: Units
    - key: features_others.units.description # TODO
      t: Which of these CSS units have you used?

    - key: options.units.px # TODO
      t: px
    - key: options.units.pt # TODO
      t: pt
    - key: options.units.percent # TODO
      t: '%'
    - key: options.units.em # TODO
      t: em
    - key: options.units.rem # TODO
      t: rem
    - key: options.units.vh_vw # TODO
      t: vh, vw
    - key: options.units.vmin_vmax # TODO
      t: vmin, vmax
    - key: options.units.ch # TODO
      t: ch
    - key: options.units.ex # TODO
      t: ex
    - key: options.units.mm # TODO
      t: mm
    - key: options.units.cm # TODO
      t: cm
    - key: options.units.in # TODO
      t: in

    - key: features_others.pseudo_elements # TODO
      t: Pseudo Elements
    - key: features_others.pseudo_elements.description # TODO
      t: Which of these CSS pseudo-elements have you used?

    - key: options.pseudo_elements.before # TODO
      t: '::before'
    - key: options.pseudo_elements.after # TODO
      t: '::after'
    - key: options.pseudo_elements.first_line # TODO
      t: '::first-line'
    - key: options.pseudo_elements.first_letter # TODO
      t: '::first-letter'
    - key: options.pseudo_elements.selection # TODO
      t: '::selection'
    - key: options.pseudo_elements.placeholder # TODO
      t: '::placeholder'
    - key: options.pseudo_elements.marker # TODO
      t: '::marker'
    - key: options.pseudo_elements.backdrop # TODO
      t: '::backdrop'

    - key: features_others.combinators # TODO
      t: Combinators

    - key: options.combinators.descendant # TODO
      t: div span (descendant)
    - key: options.combinators.child # TODO
      t: div > span (child)
    - key: options.combinators.next_sibling # TODO
      t: div + div (next sibling)
    - key: options.combinators.subsequent_sibling # TODO
      t: div ~ div (subsequent sibling)

    - key: features_others.tree_document_structure # TODO
      t: Tree / Document Structure

    - key: options.tree_document_structure.root # TODO
      t: :root
    - key: options.tree_document_structure.empty # TODO
      t: :empty
    - key: options.tree_document_structure.not # TODO
      t: :not()
    - key: options.tree_document_structure.nth_child # TODO
      t: :nth-child()
    - key: options.tree_document_structure.nth_last_child # TODO
      t: :nth-last-child()
    - key: options.tree_document_structure.first_child # TODO
      t: :first-child
    - key: options.tree_document_structure.last_child # TODO
      t: :last-child
    - key: options.tree_document_structure.only_child # TODO
      t: :only-child
    - key: options.tree_document_structure.nth_of_type # TODO
      t: :nth-of-type()
    - key: options.tree_document_structure.nth_last_of_type # TODO
      t: :nth-last-of-type()
    - key: options.tree_document_structure.first_of_type # TODO
      t: :first-of-type
    - key: options.tree_document_structure.last_of_type # TODO
      t: :last-of-type
    - key: options.tree_document_structure.only_of_type # TODO
      t: :only-of-type
    - key: options.tree_document_structure.lang # TODO
      t: :lang()
    - key: options.tree_document_structure.is # TODO
      t: :is()
    - key: options.tree_document_structure.where # TODO
      t: :where()
    - key: options.tree_document_structure.has # TODO
      t: :has()

    - key: features_others.attributes # TODO
      t: Attributes

    - key: options.attributes.presence # TODO
      t: div[foo] (Presence)
    - key: options.attributes.equality # TODO
      t: div[foo="bar"] (Equality)
    - key: options.attributes.starts_with # TODO
      t: div[foo^="bar"] (Starts with)
    - key: options.attributes.ends_with # TODO
      t: div[foo$="bar"] (Ends with)
    - key: options.attributes.contains_word # TODO
      t: div[foo~="bar"] (Contains word)
    - key: options.attributes.contains_substring # TODO
      t: div[foo*="bar"] (Contains substring)

    - key: features_others.links_urls # TODO
      t: Links/URLs

    - key: options.links_urls.any_link # TODO
      t: :any-link
    - key: options.links_urls.link_visited # TODO
      t: :link and :visited
    - key: options.links_urls.local_link # TODO
      t: :local-link
    - key: options.links_urls.target # TODO
      t: :target

    - key: features_others.interaction # TODO
      t: Interaction

    - key: options.interaction.hover # TODO
      t: :hover
    - key: options.interaction.active # TODO
      t: :active
    - key: options.interaction.focus # TODO
      t: :focus
    - key: options.interaction.focus_within # TODO
      t: :focus-within
    - key: options.interaction.focus_visible # TODO
      t: :focus-visible

    - key: features_others.form_controls # TODO
      t: Form Controls

    - key: options.form_controls.enabled_disabled # TODO
      t: :enabled and :disabled
    - key: options.form_controls.read_only_write # TODO
      t: :read-only and :read-write
    - key: options.form_controls.placeholder_shown # TODO
      t: :placeholder-shown
    - key: options.form_controls.default # TODO
      t: :default
    - key: options.form_controls.checked # TODO
      t: :checked
    - key: options.form_controls.indeterminate # TODO
      t: :indeterminate
    - key: options.form_controls.valid_invalid # TODO
      t: :valid and :invalid
    - key: options.form_controls.user_invalid # TODO
      t: :user-invalid
    - key: options.form_controls.in_out_range # TODO
      t: :in-range and :out-of-range
    - key: options.form_controls.required_optional # TODO
      t: :required and :optional

    ###########################################################################
    # Tools
    ###########################################################################

    - key: tools.atomiccss # TODO
      t: Utility-First/Atomic CSS

    ###########################################################################
    # Environments
    ###########################################################################

    - key: environments.browsers # TODO
      t: Browsers
    - key: environments.browsers.description # TODO
      t: Which browsers do you test in?

    - key: environments.form_factors # TODO
      t: Form Factors
    - key: environments.form_factors.description # TODO
      t: Which form factors do you test on?

    - key: environments.css_for_print # TODO
      t: CSS for Print
    - key: environments.css_for_print.description # TODO
      t: Do you write print styles?

    - key: environments.css_for_email # TODO
      t: CSS for Email Clients
    - key: environments.css_for_email.description # TODO
      t: Do you write CSS for email clients?

    ###########################################################################
    # Opinions
    ###########################################################################

    - key: opinions.css_easy_to_learn # TODO
      t: CSS is easy to learn

    - key: opinions.css_evolving_slowly # TODO
      t: CSS is evolving too slowly

    - key: opinions.utility_classes_to_be_avoided # TODO
      t: Utility (non-semantic) classes (.center, .large-text, etc.) should be avoided

    - key: opinions.selector_nesting_to_be_avoided # TODO
      t: Selector nesting (.foo .bar ul li {...}) should be avoided

    - key: opinions.css_is_programming_language # TODO
      t: CSS is a programming language

    - key: opinions.enjoy_writing_css # TODO
      t: I enjoy writing CSS

    - key: opinions_other.currently_missing_from_css.others # TODO
      t: What do you feel is currently missing from CSS?
    - key: opinions_other.currently_missing_from_css.others.description # TODO
      t: Features you'd like to see in CSS one day.

    - key: opinions.sum_up_one_word_css # TODO
      t: CSS in one word
    - key: opinions.sum_up_one_word_css.description # TODO
      t: How would you sum up your opinion of CSS in one word?

    - key: happiness.state_of_the_web # TODO
      t: How happy are you with the general state of web technologies?

    - key: happiness.state_of_css # TODO
      t: How happy are you with the general state of CSS?
