locale: de-DE
namespace: js
translations:
    ###########################################################################
    # General
    ###########################################################################

    - key: general.survey_intro_js2019
      t: >
          Die JavaScript Welt könnte etwas Einstufung benötigen.

          Seit 2016 hat diese Umfrage jährlich Daten von mehr als 20 000 Entwicklern gesammelt, um die aktuellen und die kommenden Trends zu identifizieren.

          Nimm an der Umfrage teil und hilf uns herauszufinden welche Bibliotheken Entwickler als nächstes lernen möchten, welche die höchsten Zufriedenheitswerte aufweisen und vieles mehr.

    ###########################################################################
    # Sections
    ###########################################################################

    - key: sections.syntax.title
      t: Syntax
    - key: sections.syntax.description
      t: Die Grammatik von JavaScript.

    - key: sections.language.title
      t: Sprache
    - key: sections.language.description
      t: Das Vokabular von JavaScript.

    - key: sections.data_structures.title
      t: Datenstrukturen
    - key: sections.data_structures.description
      t: Wie Du Daten speicherst und bearbeitest.

    - key: sections.browser_apis.title
      t: Browser APIs
    - key: sections.browser_apis.description
      t: Funktionen, die von Browsern bereitgestellt werden.

    - key: sections.other_features.title
      t: Andere Features
    - key: sections.other_features.description
      t: Andere Technologien und Muster

    - key: sections.patterns.title
      t: Muster
    - key: sections.patterns.description
      t: Wie Du Code schreibst

    - key: sections.javascript_flavors.title
      t: JavaScript Flavors
    - key: sections.javascript_flavors.description
      t: Sprachen, die zu JavaScript übersetzen.

    - key: sections.front_end_frameworks.title
      t: Front-end Frameworks
    - key: sections.front_end_frameworks.description
      t: Frontend Frameworks und Bibliotheken

    - key: sections.datalayer.title
      t: Datenschichten
    - key: sections.datalayer.description
      t: Laden und Verwalten von Daten in Apps.

    - key: sections.back_end_frameworks.title
      t: Backend Frameworks
    - key: sections.back_end_frameworks.description
      t: JavaScript auf dem Server

    - key: sections.testing.title
      t: Testen
    - key: sections.testing.description
      t: Werkzeuge, um den Code zu testen.

    - key: sections.mobile_desktop.title
      t: Mobile & Desktop
    - key: sections.mobile_desktop.description
      t: JavaScript für mobile Geräte und Desktop Apps.

    ###########################################################################
    # Options
    ###########################################################################

    # CSS for print
    - key: options.css_for_print.0
      t: Ich schreibe fast nie Print Styles
    - key: options.css_for_print.1
      t: Ich schreibe gelegentlich Print Styles
    - key: options.css_for_print.2
      t: Ich schreibe Print Styles üblicherweise als Teil meiner Projekte
    - key: options.css_for_print.3
      t: Ich schreibe hauptsächlich Print Styles

    # CSS for email
    - key: options.css_for_email.0
      t: Ich schreibe fast nie CSS für E-Mail Clients
    - key: options.css_for_email.1
      t: Ich schreibe gelegentlich CSS für E-Mail Clients
    - key: options.css_for_email.2
      t: Ich schreibe CSS für E-Mail Clients üblicherweise als Teil meiner Projekte
    - key: options.css_for_email.3
      t: Ich schreibe CSS hauptsächlich für E-Mail Clients

    ###########################################################################
    # Features
    ###########################################################################

    # syntax
    - key: features.destructuring
      t: Destructuring
    - key: features.destructuring.description
      t: 'Beispiel: <code>const { foo } = bar</code>'
    - key: features.spread_operator
      t: Spread operator
    - key: features.spread_operator.description
      t: 'Beispiel: <code>[...array1, ...array2]</code>'
    - key: features.arrow_functions
      t: Arrow Functions
    - key: features.arrow_functions.description
      t: 'Beispiel: <code>const foo = () => {}</code>'

    # language
    - key: features.proxies
      t: Proxies
    - key: features.async_await
      t: Async/Await
    - key: features.promises
      t: Promises
    - key: features.decorators
      t: Decorators
    - key: features.decorators.description
      t: >
          Einfach gesagt ist ein Decorator eine simple Variante einen Codeteil in einem anderen zu umschließen - ihn buchstäblich zu "dekorieren".

    # data structures
    - key: features.maps
      t: Maps
    - key: features.sets
      t: Sets
    - key: features.typed_arrays
      t: Typed Arrays
    - key: array_prototype_flat
      t: Array.prototype.flat

    # browser apis
    - key: features.service_workers
      t: Service Workers
    - key: features.local_storage
      t: LocalStorage
    - key: features.i18n
      t: i18n
    - key: features.web_components
      t: Web Components
    - key: features.web_audio
      t: Web Audio API
    - key: features.webgl
      t: WebGL
    - key: features.web_animations
      t: Web Animations API
    - key: features.webrtc
      t: WebRTC
    - key: features.web_speech
      t: Web Speech API
    - key: features.webvr
      t: WebVR
    - key: features.websocket
      t: Websocket
    - key: features.fetch
      t: Fetch API

    # other features
    - key: features.pwa
      t: Progressive Web Apps (PWA)
    - key: features.wasm
      t: WebAssembly (WASM)

    # patterns
    - key: patterns.object_oriented_programming
      t: Objektorientierte Programmierung
    - key: features.functional_programming
      t: Funktionale Programmierung
    - key: features.reactive_programming
      t: Reaktive Programmierung

    ###########################################################################
    # Opinions
    ###########################################################################

    - key: opinions.js_moving_in_right_direction
      t: JavaScript entwickelt sich in die richtige Richtung.

    - key: opinions.building_js_apps_overly_complex
      t: JavaScript Apps zu bauen ist derzeit übermäßig komplex.

    - key: opinions.js_over_used_online
      t: JavaScript wird online zu oft genutzt.

    - key: opinions.enjoy_building_js_apps
      t: Ich genieße es JavaScript Apps zu bauen.

    - key: opinions.would_like_js_to_be_main_lang
      t: Ich würde JavaScript gerne als meine primäre Programmiersprache verwenden.

    - key: opinions.js_ecosystem_changing_to_fast
      t: Das JavaScript-Ökosystem verändert sich zu schnell.

    - key: opinions.missing_from_js
      t: Was vermisst Du persönlich in JavaScript?
    - key: opinions.missing_from_js.description
      t: Features, die Du irgendwann gerne in JavaScript sehen möchtest.
