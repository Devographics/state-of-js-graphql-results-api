locale: zh-Hant
namespace: css
translations:
    ###########################################################################
    # General
    ###########################################################################

    - key: general.survey_intro_css2020
      t: >
          CSS 以前所未有的速度進化中。

          Flexbox、Grid、多欄排版...甚至還沒說到 CSS-in-JS 這樣的全新世界觀。

          因此，每年舉辦的 [JavaScript 現況調查](https://stateofjs.com) 成功後，我們決定發掘樣式與選擇器的世界，幫助大家找到最新的潮流...知道接下來要學習和使用的工具！

    ###########################################################################
    # Sections
    ###########################################################################

    - key: sections.layout.title
      t: 版面安排
    - key: sections.layout.description
      t: 如何把螢幕上的元素定位？

    - key: sections.shapes_graphics.title
      t: 形狀 & 圖形
    - key: sections.shapes_graphics.description
      t: 控制形狀與元素的顯示方式。

    - key: sections.interactions.title
      t: 互動
    - key: sections.interactions.description
      t: 控制使用者如何跟頁面互動。

    - key: sections.typography.title
      t: 文字排版
    - key: sections.typography.description
      t: 文字的設定與擺放。

    - key: sections.animations_transforms.title
      t: 動畫 & 變形
    - key: sections.animations_transforms.description
      t: 把元素加上動畫或變形。

    - key: sections.media_queries.title
      t: Media Queries
    - key: sections.media_queries.description
      t: 讓網站相容於使用者裝置或偏好的方式。

    - key: sections.other_features.title
      t: 其他功能
    - key: sections.other_features.description
      t: 其他 CSS 功能。

    - key: sections.units_selectors.title
      t: 單位 & 選擇器
    - key: sections.units_selectors.description
      t: 試試看對 CSS 單位與選擇器的理解。

    - key: sections.pre_post_processors.title
      t: 預 & 後處理器
    - key: sections.pre_post_processors.description
      t: 強化 CSS 的工具。

    - key: sections.css_frameworks.title
      t: CSS 框架
    - key: sections.css_frameworks.description
      t: 提供已預先做好的元件和樣式程式庫。

    - key: sections.css_methodologies.title
      t: CSS 方法論
    - key: sections.css_methodologies.description
      t: 用程式化方法撰寫更乾淨的 CSS。

    - key: sections.css_in_js.title
      t: CSS-in-JS
    - key: sections.css_in_js.description
      t: 幫助 CSS 整合進 JavaScript 的程式庫。

    - key: sections.environments.title
      t: 環境
    - key: sections.environments.description
      t: 撰寫的 CSS 是用在哪些環境？

    ###########################################################################
    # Options
    ###########################################################################

    # CSS for print
    - key: options.css_for_print.0
      t: 我（幾乎）沒寫過列印的樣式。
    - key: options.css_for_print.1
      t: 我偶爾寫列印的樣式。
    - key: options.css_for_print.2
      t: 我在許多專案裡會把列印用的樣式當作一部分來撰寫。
    - key: options.css_for_print.3
      t: 我主要就是在寫列印用的 CSS。

    # CSS for email
    - key: options.css_for_email.0
      t: 我（幾乎）沒寫過電子郵件客戶端的 CSS。
    - key: options.css_for_email.1
      t: 我偶爾寫電子郵件客戶端的 CSS。
    - key: options.css_for_email.2
      t: 我在許多專案裡會把電子郵件客戶端的 CSS 當作一部分來撰寫。
    - key: options.css_for_email.3
      t: 我主要就是在做電子郵件客戶端的 CSS。

    ###########################################################################
    # Features
    ###########################################################################

    # layout

    - key: features.grid
      t: CSS Grid
    - key: features.subgrid
      t: Subgrid
    - key: features.regions
      t: CSS Region
    - key: features.flexbox
      t: Flexbox
    - key: features.multi_column
      t: CSS 多欄排版
    - key: features.writing_modes
      t: CSS 書寫模式 (Writing Modes)
    - key: features.exclusions
      t: CSS 排除條件
    - key: features.position_sticky
      t: '<code>position: sticky</code>'
    - key: features.logical_properties
      t: 邏輯參數 (Logical Properties)
    - key: features.logical_properties.description
      t: <code>margin-block-start</code>、<code>padding-inline-end</code>...等。
    - key: features.aspect_ratio
      t: <code>aspect-ratio</code>
    - key: features.content_visibility
      t: <code>content-visibility</code>

    # shapes & graphics
    - key: features.shapes
      t: CSS 形狀 (Shape)
    - key: features.object_fit
      t: <code>object-fit</code>
    - key: features.clip_path
      t: <code>clip-path</code>
    - key: features.masks
      t: CSS 遮罩 (Mask)
    - key: features.blend_modes
      t: 混合模式 (Blend Modes)
    - key: features.blend_modes.description
      t: <code>mix-blend-mode</code> 參數
    - key: features.filter_effects
      t: CSS 濾鏡效果
    - key: features.backdrop_filter
      t: <code>backdrop-filter</code>

    # interactions
    - key: features.scroll_snap
      t: CSS Scroll Snap
    - key: features.overscroll_behavior
      t: <code>overscroll-behavior</code>
    - key: features.overflow_anchor
      t: <code>overflow-anchor</code>
    - key: features.touch_action
      t: <code>touch-action</code>
    - key: features.pointer_events
      t: <code>pointer-events</code>

    # typography
    - key: features.web_fonts
      t: 網路字型 (@font-face)
    - key: features.variables_fonts
      t: 可變換字型
    - key: features.line_breaking
      t: 換行參數 (Line breaking)
    - key: features.line_breaking.description
      t: <code>overflow-wrap</code>, <code>word-break</code>, <code>line-break</code>, <code>hyphens</code>
    - key: features.font_variant
      t: <code>font-variant-*</code>
    - key: features.initial_letter
      t: <code>initial-letter</code>
    - key: features.font_variant_numeric
      t: <code>font-variant-numeric</code>
    - key: features.font_display
      t: <code>font-display</code>
    - key: features.line_clamp
      t: <code>line-clamp</code>
    - key: features.leading_trim
      t: <code>leading-trim</code>
    - key: features.direction
      t: <code>direction</code>
    - key: features.direction.description
      t: 也包含 <code>dir</code> HTML 屬性.

    # animations & transforms
    - key: features.transitions
      t: CSS 轉場
    - key: features.transforms
      t: CSS 變形
    - key: features.animations
      t: CSS 動畫
    - key: features.perspective
      t: <code>perspective</code>

    # media queries
    - key: features.feature_support_queries
      t: 功能支援判別 (Feature Support Queries) (<code>@supports</code>)
    - key: features.prefers_reduced_motion
      t: <code>prefers-reduced-motion</code>
    - key: features.prefers_color_scheme
      t: <code>prefers-color-scheme</code>
    - key: features.color_gamut
      t: <code>color-gamut</code>

    # other features
    - key: features.variables
      t: CSS 變數（自訂參數）
    - key: features.containment
      t: CSS Containment
    - key: features.will_change
      t: <code>will-change</code>
    - key: features.calc
      t: <code>calc()</code>
    - key: features.houdini
      t: Houdini
    - key: features.comparison_functions
      t: CSS 比較函式 (Comparison Functions)
    - key: features.comparison_functions.description
      t: <code>min()</code>, <code>max()</code>, and <code>clamp()</code>

    ###########################################################################
    # Units & Selectors
    ###########################################################################

    - key: features_others.units
      t: 單位
    - key: features_others.units.description
      t: 用過哪些 CSS 單位？

    - key: options.units.px
      t: px
    - key: options.units.pt
      t: pt
    - key: options.units.percent
      t: '%'
    - key: options.units.em
      t: em
    - key: options.units.rem
      t: rem
    - key: options.units.vh_vw
      t: vh, vw
    - key: options.units.vmin_vmax
      t: vmin, vmax
    - key: options.units.ch
      t: ch
    - key: options.units.ex
      t: ex
    - key: options.units.mm
      t: mm
    - key: options.units.cm
      t: cm
    - key: options.units.in
      t: in

    - key: features_others.pseudo_elements
      t: 偽元素 (Pseudo Elements)
    - key: features_others.pseudo_elements.description
      t: 用過哪些 CSS 偽元素？

    - key: options.pseudo_elements.before
      t: '::before'
    - key: options.pseudo_elements.after
      t: '::after'
    - key: options.pseudo_elements.first_line
      t: '::first-line'
    - key: options.pseudo_elements.first_letter
      t: '::first-letter'
    - key: options.pseudo_elements.selection
      t: '::selection'
    - key: options.pseudo_elements.placeholder
      t: '::placeholder'
    - key: options.pseudo_elements.marker
      t: '::marker'
    - key: options.pseudo_elements.backdrop
      t: '::backdrop'

    - key: features_others.combinators
      t: 組合語法

    - key: options.combinators.descendant
      t: div span（後代）
    - key: options.combinators.child
      t: div > span（子代）
    - key: options.combinators.next_sibling
      t: div + div（同層下一個）
    - key: options.combinators.subsequent_sibling
      t: div ~ div（同層之後）

    - key: features_others.tree_document_structure
      t: 樹狀 / 文件結構

    - key: options.tree_document_structure.root
      t: :root
    - key: options.tree_document_structure.empty
      t: :empty
    - key: options.tree_document_structure.not
      t: :not()
    - key: options.tree_document_structure.nth_child
      t: :nth-child()
    - key: options.tree_document_structure.nth_last_child
      t: :nth-last-child()
    - key: options.tree_document_structure.first_child
      t: :first-child
    - key: options.tree_document_structure.last_child
      t: :last-child
    - key: options.tree_document_structure.only_child
      t: :only-child
    - key: options.tree_document_structure.nth_of_type
      t: :nth-of-type()
    - key: options.tree_document_structure.nth_last_of_type
      t: :nth-last-of-type()
    - key: options.tree_document_structure.first_of_type
      t: :first-of-type
    - key: options.tree_document_structure.last_of_type
      t: :last-of-type
    - key: options.tree_document_structure.only_of_type
      t: :only-of-type
    - key: options.tree_document_structure.lang
      t: :lang()
    - key: options.tree_document_structure.is
      t: :is()
    - key: options.tree_document_structure.where
      t: :where()
    - key: options.tree_document_structure.has
      t: :has()

    - key: features_others.attributes
      t: 屬性

    - key: options.attributes.presence
      t: div[foo]（屬性存在）
    - key: options.attributes.equality
      t: div[foo="bar"]（屬性值完全符合）
    - key: options.attributes.starts_with
      t: div[foo^="bar"]（以...開始）
    - key: options.attributes.ends_with
      t: div[foo$="bar"]（以...結尾）
    - key: options.attributes.contains_word
      t: div[foo~="bar"]（包含文字）
    - key: options.attributes.contains_substring
      t: div[foo*="bar"]（包含子字串）

    - key: features_others.links_urls
      t: 連結/網址

    - key: options.links_urls.any_link
      t: :any-link
    - key: options.links_urls.link_visited
      t: :link and :visited
    - key: options.links_urls.local_link
      t: :local-link
    - key: options.links_urls.target
      t: :target

    - key: features_others.interaction
      t: 互動

    - key: options.interaction.hover
      t: :hover
    - key: options.interaction.active
      t: :active
    - key: options.interaction.focus
      t: :focus
    - key: options.interaction.focus_within
      t: :focus-within
    - key: options.interaction.focus_visible
      t: :focus-visible

    - key: features_others.form_controls
      t: 表單控制

    - key: options.form_controls.enabled_disabled
      t: :enabled and :disabled
    - key: options.form_controls.read_only_write
      t: :read-only and :read-write
    - key: options.form_controls.placeholder_shown
      t: :placeholder-shown
    - key: options.form_controls.default
      t: :default
    - key: options.form_controls.checked
      t: :checked
    - key: options.form_controls.indeterminate
      t: :indeterminate
    - key: options.form_controls.valid_invalid
      t: :valid and :invalid
    - key: options.form_controls.user_invalid
      t: :user-invalid
    - key: options.form_controls.in_out_range
      t: :in-range and :out-of-range
    - key: options.form_controls.required_optional
      t: :required and :optional

    ###########################################################################
    # Environments
    ###########################################################################

    - key: environments.browsers
      t: 瀏覽器
    - key: environments.browsers.description
      t: 在哪些瀏覽器進行測試？

    - key: environments.form_factors
      t: 裝置
    - key: environments.form_factors.description
      t: 在哪些裝置上進行測試？

    - key: environments.css_for_print
      t: 列印用的 CSS
    - key: environments.css_for_print.description
      t: 有寫列印用的樣式嗎？

    - key: environments.css_for_email
      t: 電子郵件客戶端的 CSS
    - key: environments.css_for_email.description
      t: 有寫電子郵件客戶端的 CSS 嗎？

    ###########################################################################
    # Opinions
    ###########################################################################

    - key: opinions.css_easy_to_learn
      t: CSS 很容易學

    - key: opinions.css_evolving_slowly
      t: CSS 的演進實在太慢了

    - key: opinions.utility_classes_to_be_avoided
      t: 應該要避免使用 `.center` 和 `.large-text` 這樣工具式、非情境的 class

    - key: opinions.selector_nesting_to_be_avoided
      t: 應該要避免使用像是 `.foo .bar ul li {...}` 這樣的巢狀選擇器

    - key: opinions.css_is_programming_language
      t: CSS 是一種程式語言

    - key: opinions.enjoy_writing_css
      t: 我喜歡撰寫 CSS

    - key: opinions_other.currently_missing_from_css.others
      t: 你覺得 CSS 目前還缺了什麼？
    - key: opinions_other.currently_missing_from_css.others.description
      t: 希望未來有的 CSS 樣式。

    - key: opinions.sum_up_one_word_css
      t: 用一個詞形容 CSS
    - key: opinions.sum_up_one_word_css.description
      t: 要用一個詞總結對 CSS 的感覺的話，會是什麼？

    - key: happiness.state_of_the_web
      t: 平均來說，對於各種網路技術的狀態覺得開心嗎？

    - key: happiness.state_of_css
      t: 平均來說，對於 CSS 的狀態覺得開心嗎？
