locale: nl-NL
namespace: js
translations:
    ###########################################################################
    # General
    ###########################################################################

    - key: general.survey_intro_js2019
      t: >
          De JavaScript-wereld kan een beetje classificatie gebruiken.


          Sinds 2016 heeft deze enquête elk jaar gegevens verzameld
          van meer dan 20.000 ontwikkelaars om huidige en toekomstige trends te identificeren.


          Vul de enquête in en help ons erachter te komen welke libraries ontwikkelaars
          nog willen leren, welke de beste tevredenheidsbeoordelingen hebben en nog veel meer.

    ###########################################################################
    # Sections
    ###########################################################################

    - key: sections.syntax.title
      t: Syntax
    - key: sections.syntax.description
      t: De grammatica van JavaScript.

    - key: sections.language.title
      t: Taal
    - key: sections.language.description
      t: Het vocabulaire van JavaScript.

    - key: sections.data_structures.title
      t: Data Structuren
    - key: sections.data_structures.description
      t: Hoe je gegevens opslaat en manipuleert.

    - key: sections.browser_apis.title
      t: Browser APIs
    - key: sections.browser_apis.description
      t: De functies die door de browser worden geboden.

    - key: sections.other_features.title
      t: Andere Features
    - key: sections.other_features.description
      t: Andere technologieën en patronen.

    - key: sections.patterns.title
      t: Patronen
    - key: sections.patterns.description
      t: Hoe je het liefst code schrijft.

    - key: sections.javascript_flavors.title
      t: JavaScript-smaken
    - key: sections.javascript_flavors.description
      t: Talen die naar JavaScript compileren.

    - key: sections.front_end_frameworks.title
      t: Front-end Frameworks
    - key: sections.front_end_frameworks.description
      t: Front-end frameworks en libraries.

    - key: sections.datalayer.title
      t: Data Layer
    - key: sections.datalayer.description
      t: Gegevens laden en beheren in je app.

    - key: sections.back_end_frameworks.title
      t: Back-end Frameworks
    - key: sections.back_end_frameworks.description
      t: JavaScript op de server.

    - key: sections.testing.title
      t: Testen
    - key: sections.testing.description
      t: Tools voor het testen van je code.

    - key: sections.mobile_desktop.title
      t: Mobiel & Desktop
    - key: sections.mobile_desktop.description
      t: JavaScript voor mobiele apparaten en desktop-apps.

    - key: sections.build_tools.title
      t: Build Tools
    - key: sections.build_tools.description
      t: Code compileren en bundelen.

    - key: sections.tools_others.title
      t: Andere Tools
    - key: sections.tools_others.description
      t: Andere JavaScript tools.

    ###########################################################################
    # Options
    ###########################################################################

    ###########################################################################
    # Features
    ###########################################################################

    # syntax
    - key: features.destructuring
      t: Destructuring
    - key: features.destructuring.description
      t: 'Voorbeeld: `const { foo } = bar`'
    - key: features.spread_operator
      t: Spread operator
    - key: features.spread_operator.description
      t: 'Voorbeeld: `[...array1, ...array2]`'
    - key: features.arrow_functions
      t: Arrow Functions
    - key: features.arrow_functions.description
      t: 'Voorbeeld: `const foo = () => {}`'
    - key: features.nullish_coalescing
      t: Nullish Coalescing
    - key: features.nullish_coalescing.description
      t: >
          Voorbeeld: `const foo = 0 ?? 42`
    - key: features.optional_chaining
      t: Optional Chaining
    - key: features.optional_chaining.description
      t: >
          Voorbeeld: `const dogName = adventurer.dog?.name`
    - key: features.private_fields
      t: Private Fields
    - key: features.private_fields.description
      t: >
          Voorbeeld: `class ClassWithPrivateField { #privateField }`

    # language
    - key: features.proxies
      t: Proxies
    - key: features.async_await
      t: Async/Await
    - key: features.promises
      t: Promises
    - key: features.decorators
      t: Decorators
    - key: features.decorators.description
      t: >
          In zijn eenvoudigste vorm is een decorator gewoon een manier om
          het ene stukje code met het andere in te pakken - het letterlijk "decoreren".
    - key: features.dynamic_import
      t: Dynamic Import
    - key: features.dynamic_import.description
      t: >
          Voorbeeld: <code>await import('/modules/my-module.js')</code>

    # data structures
    - key: features.maps
      t: Maps
    - key: features.sets
      t: Sets
    - key: features.typed_arrays
      t: Typed Arrays
    - key: array_prototype_flat
      t: Array.prototype.flat

    # browser apis
    - key: features.service_workers
      t: Service Workers
    - key: features.local_storage
      t: LocalStorage
    - key: features.i18n
      t: i18n
    - key: features.web_components
      t: Web Components
    - key: features.web_audio
      t: Web Audio API
    - key: features.webgl
      t: WebGL
    - key: features.web_animations
      t: Web Animations API
    - key: features.webrtc
      t: WebRTC
    - key: features.web_speech
      t: Web Speech API
    - key: features.webvr
      t: WebVR
    - key: features.websocket
      t: Websocket
    - key: features.fetch
      t: Fetch API

    # other features
    - key: features.pwa
      t: Progressive Web Apps (PWA)
    - key: features.wasm
      t: WebAssembly (WASM)

    # patterns
    - key: patterns.object_oriented_programming
      t: Object-Oriented Programming
    - key: features.functional_programming
      t: Functional Programming
    - key: features.reactive_programming
      t: Reactive Programming

    ###########################################################################
    # Tools
    ###########################################################################

    - key: tools.angular.description
      t: >
          Let op dat deze vraag alleen gericht is op [Angular](https://angular.io/) ervaring,
          en specifiek *niet* van toepassing is op de verouderde [AngularJS](https://angularjs.org/).

    ###########################################################################
    # Other Tools
    ###########################################################################

    - key: tools_others.runtimes
      t: JavaScript Runtimes
    - key: tools_others.runtimes.description
      t: Welke engines/runtimes/execution environments gebruik je regelmatig?
    - key: tools_others.runtimes.others
      t: Andere Runtimes
    - key: tools_others.runtimes.others.description
      t: Andere antwoorden (veld met vrije vorm).

    - key: tools_others.package_registries
      t: Package Registries
    - key: tools_others.package_registries.description
      t: Van welk package registries haal je regelmatig packages op?
    - key: tools_others.package_registries.others
      t: Andere Package Registries
    - key: tools_others.package_registries.others.description
      t: Andere antwoorden (veld met vrije vorm).

    ###########################################################################
    # Opinions
    ###########################################################################

    - key: opinions.js_moving_in_right_direction
      t: JavaScript beweegt zich in de goede richting

    - key: opinions.building_js_apps_overly_complex
      t: Het bouwen van JavaScript-apps is momenteel overdreven complex

    - key: opinions.js_over_used_online
      t: JavaScript wordt online te veel gebruikt

    - key: opinions.enjoy_building_js_apps
      t: Ik vind het leuk om JavaScript-apps te bouwen

    - key: opinions.would_like_js_to_be_main_lang
      t: Ik zou graag willen dat JavaScript mijn belangrijkste programmeertaal is

    - key: opinions.js_ecosystem_changing_to_fast
      t: Het JavaScript-ecosysteem verandert te snel

    - key: opinions_others.missing_from_js.others
      t: Wat ontbreekt er volgens jou momenteel in JavaScript?
    - key: opinions_others.missing_from_js.others.description
      t: Functies die je ooit in JavaScript zou willen zien.

    - key: happiness.state_of_the_web
      t: Hoe tevreden ben je met de algemene staat van webtechnologieën?

    - key: happiness.state_of_js
      t: Hoe tevreden ben je met de algemene staat van JavaScript?
