locale: zh-Hans
namespace: js
translations:
    ###########################################################################
    # General
    ###########################################################################

    - key: general.survey_intro_js2019
      t: >
          The JavaScript world could use a bit of classification.


          自2016年以来，该调查每年从20,000多名开发人员那里获取了数据，以确定当前和未来到来的趋势。


          参加调查并帮助我们寻找开发人员接下来需要学习的库，满意度最高的库等等。

    ###########################################################################
    # Sections
    ###########################################################################

    - key: sections.syntax.title
      t: 语法
    - key: sections.syntax.description
      t: JavaScript的语法。

    - key: sections.language.title
      t: 语言
    - key: sections.language.description
      t: JavaScript 的词汇表。

    - key: sections.data_structures.title
      t: 数据结构
    - key: sections.data_structures.description
      t: 如何存储和操作数据。

    - key: sections.browser_apis.title
      t: 浏览器 API
    - key: sections.browser_apis.description
      t: 浏览器提供的功能。

    - key: sections.other_features.title
      t: 其他特征
    - key: sections.other_features.description
      t: 其他技术特征

    - key: sections.patterns.title
      t: 方式
    - key: sections.patterns.description
      t: 你喜欢如何编写代码？

    - key: sections.javascript_flavors.title # TODO
      t: JavaScript Flavors
    - key: sections.javascript_flavors.description # TODO
      t: Languages that compile to JavaScript

    - key: sections.front_end_frameworks.title # TODO
      t: Front-end Frameworks
    - key: sections.front_end_frameworks.description # TODO
      t: Front-end frameworks and libraries

    - key: sections.datalayer.title # TODO
      t: Data Layer
    - key: sections.datalayer.description # TODO
      t: Loading and managing data in your app # TODO

    - key: sections.back_end_frameworks.title # TODO
      t: Back-end Frameworks
    - key: sections.back_end_frameworks.description # TODO
      t: JavaScript on the server

    - key: sections.testing.title # TODO
      t: Testing
    - key: sections.testing.description # TODO
      t: Tools for testing your code

    - key: sections.mobile_desktop.title # TODO
      t: Mobile & Desktop
    - key: sections.mobile_desktop.description # TODO
      t: JavaScript for mobile devices and desktop apps

    ###########################################################################
    # Options
    ###########################################################################

    # CSS for print
    - key: options.css_for_print.0 # TODO
      t: I (almost) never write print styles
    - key: options.css_for_print.1 # TODO
      t: I occasionally write print styles
    - key: options.css_for_print.2 # TODO
      t: I write print styles as part of most projects
    - key: options.css_for_print.3 # TODO
      t: I focus mainly on CSS for print

    # CSS for email
    - key: options.css_for_email.0 # TODO
      t: I (almost) never write CSS for email clients
    - key: options.css_for_email.1 # TODO
      t: I occasionally write CSS for email clients
    - key: options.css_for_email.2 # TODO
      t: I write CSS for email clients as part of most projects
    - key: options.css_for_email.3 # TODO
      t: I focus mainly on CSS for email clients

    ###########################################################################
    # Features
    ###########################################################################

    # syntax
    - key: features.destructuring # TODO
      t: Destructuring
    - key: features.destructuring.description # TODO
      t: 'Example: <code>const { foo } = bar</code>'
    - key: features.spread_operator # TODO
      t: Spread operator
    - key: features.spread_operator.description # TODO
      t: 'Example: <code>[...array1, ...array2]</code>'
    - key: features.arrow_functions # TODO
      t: Arrow Functions
    - key: features.arrow_functions.description # TODO
      t: 'Example: <code>const foo = () => {}</code>'

    # language
    - key: features.proxies # TODO
      t: Proxies
    - key: features.async_await # TODO
      t: Async/Await
    - key: features.promises # TODO
      t: Promises
    - key: features.decorators # TODO
      t: Decorators
    - key: features.decorators.description # TODO
      t: >
          In its simplest form, a decorator is simply a way of 
          wrapping one piece of code with another — literally “decorating” it.

    # data structures
    - key: features.maps # TODO
      t: Maps
    - key: features.sets # TODO
      t: Sets
    - key: features.typed_arrays # TODO
      t: Typed Arrays
    - key: array_prototype_flat # TODO
      t: Array.prototype.flat

    # browser apis
    - key: features.service_workers
      t: Service Workers
    - key: features.local_storage
      t: LocalStorage
    - key: features.i18n
      t: i18n
    - key: features.web_components # TODO
      t: Web Components
    - key: features.web_audio # TODO
      t: Web Audio API
    - key: features.webgl
      t: WebGL
    - key: features.web_animations # TODO
      t: Web Animations API
    - key: features.webrtc
      t: WebRTC
    - key: features.web_speech # TODO
      t: Web Speech API
    - key: features.webvr
      t: WebVR
    - key: features.websocket
      t: Websocket
    - key: features.fetch
      t: Fetch API

    # other features
    - key: features.pwa # TODO
      t: Progressive Web Apps (PWA)
    - key: features.wasm
      t: WebAssembly (WASM)

    # patterns
    - key: patterns.object_oriented_programming # TODO
      t: Object-Oriented Programming
    - key: features.functional_programming # TODO
      t: Functional Programming
    - key: features.reactive_programming # TODO
      t: Reactive Programming

    ###########################################################################
    # Opinions
    ###########################################################################

    - key: opinions.js_moving_in_right_direction # TODO
      t: JavaScript is moving in the right direction

    - key: opinions.building_js_apps_overly_complex # TODO
      t: Building JavaScript apps is overly complex right now

    - key: opinions.js_over_used_online # TODO
      t: JavaScript is over-used online

    - key: opinions.enjoy_building_js_apps # TODO
      t: I enjoy building JavaScript apps

    - key: opinions.would_like_js_to_be_main_lang # TODO
      t: I would like JavaScript to be my main programming language

    - key: opinions.js_ecosystem_changing_to_fast # TODO
      t: The JavaScript ecosystem is changing too fast

    - key: opinions.missing_from_js # TODO
      t: What do you feel is currently missing from JavaScript?
    - key: opinions.missing_from_js.description # TODO
      t: Features you'd like to see in JavaScript one day.
